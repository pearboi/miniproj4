[{"C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\index.js":"1","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\App.js":"2","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\PermanentDrawerLeft.js":"4","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\AssetList.js":"5","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\Portfolio.js":"6","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\PortfolioAllocation.js":"7","C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\index.js":"8","C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\App.js":"9","C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\reportWebVitals.js":"10","C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\PermanentDrawerLeft.js":"11","C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\Portfolio.js":"12","C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\AssetList.js":"13","C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\PortfolioAllocation.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":232,"mtime":1607218350458,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":2331,"mtime":1607490225388,"results":"19","hashOfConfig":"16"},{"size":5662,"mtime":1608353352520,"results":"20","hashOfConfig":"16"},{"size":5314,"mtime":1608346434517,"results":"21","hashOfConfig":"16"},{"size":10070,"mtime":1608700514833,"results":"22","hashOfConfig":"16"},{"size":500,"mtime":1617162642794,"results":"23","hashOfConfig":"24"},{"size":2163,"mtime":1617249894416,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1617162642878,"results":"26","hashOfConfig":"24"},{"size":2255,"mtime":1617162642529,"results":"27","hashOfConfig":"24"},{"size":5192,"mtime":1617162642595,"results":"28","hashOfConfig":"24"},{"size":5537,"mtime":1617162642463,"results":"29","hashOfConfig":"24"},{"size":9811,"mtime":1617162642641,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1sy97dp",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"12rr1n3",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\index.js",[],["64","65"],"C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\App.js",[],"C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\PermanentDrawerLeft.js",["66"],"import React, {Component} from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Portfolio from './Portfolio';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            width: `calc(100% - 240px)`,\r\n            marginLeft: 240,\r\n        },\r\n        drawer: {\r\n            width: 240,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: 240,\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        content:{\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.default,\r\n            padding: theme.spacing(3),\r\n        },\r\n        splitscreen: {\r\n            display: 'flex',\r\n            flexDirection: 'row'\r\n        },\r\n        leftpane: {\r\n            width: '50%'\r\n        },\r\n        rightpane: {\r\n            width: '50%'\r\n        },\r\n    }))\r\n\r\nexport default function PermanentDrawerLeft() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                    paper: classes.drawerPaper,\r\n                    }}\r\n                    anchor=\"left\"\r\n                >\r\n                    <div className={classes.toolbar}>GAINZ</div>\r\n                    <Divider />\r\n                    <List>\r\n                    {['Portfolio'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                        <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                    </List>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <Portfolio/>\r\n                </main>\r\n            </div>\r\n        </div>\r\n        );\r\n    \r\n}\r\n","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\AssetList.js",["67","68","69"],"import AssetClass from './AssetList.css';\r\nimport React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport clsx from 'clsx';\r\nimport AccordionActions from '@material-ui/core/AccordionActions';\r\n\r\nexport function viewRobinhood(){\r\n    this.setState({\r\n        asset: 'robinhood'\r\n    })\r\n}\r\nexport function viewCoinbase(){\r\n    this.setState({\r\n        asset: 'coinbasepro'\r\n    })\r\n}\r\n\r\nexport default class AssetList extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        asset: 'robinhood'\r\n      }\r\n    }\r\n    \r\n    render(){\r\n      if(this.props.robinData['positions'] == null || this.props.robinData == null){\r\n        return null\r\n      }\r\n      if(this.props.platform === 'robinhood'){\r\n          if(this.props.robinData != null){\r\n              console.log(this.props.robinData)\r\n              var assets = this.props.robinData['positions']\r\n              console.log(assets)\r\n            return(\r\n                <div className={'list-of-assets'} style={{overflow: 'auto'}}>\r\n                    <Typography>Robinhood</Typography>\r\n                    {Object.keys(assets).map(asset => (\r\n                        <Accordion out>\r\n                        <AccordionSummary\r\n                          aria-controls=\"panel1c-content\"\r\n                          id=\"panel1c-header\"\r\n                        >\r\n                          <div className={'column'} width='66.66%'>\r\n                            <Typography className={AssetClass.heading} key={asset}>{asset}: {assets[asset]['name']}</Typography>\r\n                          </div>\r\n                          <div className={'column-right'} width ='33.33%'>\r\n                            <Typography className={AssetClass.secondaryHeading} key={asset}>Price: ${assets[asset]['price']}</Typography>\r\n                          </div>\r\n                        </AccordionSummary>\r\n                        <Divider />\r\n                        <AccordionDetails className={AssetClass.details}>\r\n                          <div className={'column'} width ='33.33%'>\r\n                            <Typography className={AssetClass.secondaryHeading} key={asset}>Quantity: {assets[asset]['quantity']}</Typography>\r\n                          </div>\r\n                          <div className={'column'} width ='33.33%'>\r\n                            <Typography className={AssetClass.secondaryHeading} key={asset}>Equity: ${assets[asset]['equity']}</Typography>\r\n                          </div>\r\n                          <div className={clsx('column', AssetClass.helper)} width='33.33%'>\r\n                            <Typography className={AssetClass.secondaryHeading} width ='50%' key={asset}>%Change: {assets[asset]['percent_change']}%</Typography>\r\n                            <Typography className={AssetClass.secondaryHeading} width ='50%' key={asset}>Change: {assets[asset]['equity_change']}</Typography>\r\n                          </div>\r\n                        </AccordionDetails>\r\n                        <Divider />\r\n                      </Accordion>\r\n                    ))}\r\n              </div>\r\n            );\r\n          }\r\n        else return(<div>\r\n            <Accordion>\r\n                \r\n            </Accordion>\r\n        </div>)\r\n      }\r\n      else if(this.props.platform === 'coinbasepro'){\r\n        if(this.props.coinbaseData == null){\r\n          return null\r\n        }\r\n        if(this.props.coinbaseData != null){\r\n            console.log(this.props.coinbaseData)\r\n            var assets = this.props.coinbaseData['assets']\r\n          return(\r\n              <div className={'list-of-assets'} style={{overflow: 'auto'}}>\r\n                  <Typography>Coinbase Pro</Typography>\r\n                  {Object.keys(assets).map(asset => (\r\n                      <Accordion >\r\n                      <AccordionSummary\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                      >\r\n                        <div className={'column'} width='33.33%'>\r\n                          <Typography className={AssetClass.heading} key={asset}>{asset}: {}</Typography>\r\n                        </div>\r\n                        <div className={'column'} width ='33.33%'>\r\n                          <Typography className={AssetClass.secondaryHeading} key={asset}>Price: ${assets[asset]['price']}</Typography>\r\n                        </div>\r\n                      </AccordionSummary>\r\n                      <Divider />\r\n                      <AccordionDetails className={AssetClass.details}>\r\n                        <div className={'column'} width ='33.33%'>\r\n                          <Typography className={AssetClass.secondaryHeading} key={asset}>Quantity: {assets[asset]['balance']}</Typography>\r\n                        </div>\r\n                        <div className={'column'} width ='33.33%'>\r\n                          <Typography className={AssetClass.secondaryHeading} key={asset}>Equity: ${assets[asset]['equity']}</Typography>\r\n                        </div>\r\n                      </AccordionDetails>\r\n                      <Divider />\r\n                    </Accordion>\r\n                  ))}\r\n            </div>\r\n          );\r\n        }\r\n      else return(<div>\r\n          <Accordion>\r\n              \r\n          </Accordion>\r\n      </div>)\r\n      }\r\n    }\r\n}","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\Portfolio.js",["70"],"import React, {Component} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AssetList from './AssetList';\r\nimport axios from 'axios';\r\nimport './Portfolio.css';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport PortfolioAllocation from './PortfolioAllocation';\r\n\r\nexport default class Portfolio extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            platform: 'robinhood',\r\n            platforms: [],\r\n            robinEq: Float32Array,\r\n            coinbaseEq: Float32Array,\r\n            robinData: {},\r\n            coinbaseData: {},\r\n            testData: {}\r\n        }\r\n        this.updateAssetsView = this.updateAssetsView.bind(this);\r\n    }\r\n\r\n    updateAssetsView(platform){\r\n        if(platform === 'robinhood'){\r\n            this.setState({\r\n                platform: 'robinhood'\r\n            }, function () {\r\n            console.log(this.state.platform);\r\n            });\r\n        }\r\n        else if(platform === 'coinbasepro'){\r\n            this.setState({\r\n                platform: 'coinbasepro'\r\n            }, function () {\r\n                console.log(this.state.platform);\r\n            });\r\n        }\r\n    }\r\n    \r\n    reQueryAssets(){\r\n        this.setState({platforms: []})\r\n        axios.get('http://localhost:8000/robinhood')\r\n            .then(res => {\r\n                if(res.status === 200){\r\n                    this.setState({\r\n                        robinData : res.data,\r\n                        platforms: this.state.platforms.concat('robinhood')\r\n                    })\r\n                }\r\n            })\r\n        axios.get('http://localhost:8000/coinbasepro')\r\n            .then(res => {\r\n                if(res.status === 200){\r\n                    this.setState({\r\n                        coinbaseData : res.data,\r\n                        platforms: this.state.platforms.concat('coinbasepro'),\r\n                    }, () => {\r\n                        console.log(this.state.testData)\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Grid className= {'flex-section'} container spacing={2} direction={'row'} alignItems={'flex-start'} justify={'flex-start'}>\r\n                <Grid item sm = {2} xs={12}>\r\n                    <Button variant=\"contained\" style={{backgroundColor: '#76ff03'}} className={'button'} padding={10} xs={12} onClick={() => {this.updateAssetsView('robinhood')}}>Robinhood   </Button>\r\n                    \r\n                </Grid>\r\n                <Grid item sm = {2} xs={12}spacing ={3}>\r\n                    <Button variant=\"contained\" color=\"primary\" className={'button'} padding={10} xs={12} onClick={() => {this.updateAssetsView('coinbasepro')}}>CoinbasePro</Button>\r\n\r\n                </Grid>\r\n                <Grid item sm = {2} xs={12} spacing ={3}>\r\n                    <Button variant=\"contained\" style={{backgroundColor: '#ff9100'}} className={'button'} padding={10} xs={12} onClick={() => {this.reQueryAssets()}}>Refresh    </Button> \r\n                </Grid>\r\n                <Grid item sm = {9}>\r\n                    \r\n                </Grid>\r\n                <Grid item sm ={4}>\r\n                    <AssetList platform={this.state.platform} robinData={this.state.robinData} coinbaseData={this.state.coinbaseData}/>\r\n                </Grid>\r\n                <Grid item sm ={8} className={'footer'} position={'absolute'} height={500} left={0} bottom= {'100%'} width={'100%'}>\r\n                    <Tabs>\r\n                        <TabList>\r\n                        <Tab>Portfolio Allocation</Tab>\r\n                        <Tab>Charts</Tab>\r\n                        </TabList>\r\n\r\n                        <TabPanel>\r\n                           <PortfolioAllocation \r\n                                robinData={this.state.robinData} \r\n                                coinbaseData={this.state.coinbaseData}\r\n                                platforms={this.state.platforms}\r\n                            >\r\n                            </PortfolioAllocation>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                        <p>\r\n                            <b>Luigi</b> (<i>Japanese: ルイージ Hepburn: Ruīji, [ɾɯ.iː.dʑi̥]</i>) (<i>English: /luˈiːdʒi/;\r\n                            Italian: [luˈiːdʒi]</i>) is a fictional character featured in video games and related media\r\n                            released by Nintendo. Created by prominent game designer Shigeru Miyamoto, Luigi is portrayed\r\n                            as the slightly younger but taller fraternal twin brother of Nintendo's mascot Mario, and\r\n                            appears in many games throughout the Mario franchise, often as a sidekick to his brother.\r\n                        </p>\r\n                        <p>\r\n                            Source:{' '}\r\n                            <a href=\"https://en.wikipedia.org/wiki/Luigi\" target=\"_blank\">\r\n                            Wikipedia\r\n                            </a>\r\n                        </p>\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Chris\\repo\\finance\\portfolio\\portfolioFrontEnd\\src\\PortfolioAllocation.js",["71","72","73"],"C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\index.js",[],["74","75"],"C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\App.js",["76"],"C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\PermanentDrawerLeft.js",["77"],"C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\Portfolio.js",["78"],"C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\AssetList.js",["79","80","81"],"C:\\Users\\Chris\\Documents\\CS6440\\portfolio-master\\portfolio-master\\portfolioFrontEnd\\src\\PortfolioAllocation.js",["82","83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"93","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"94","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":87,"column":17,"nodeType":"91","messageId":"97","endLine":87,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":112,"column":75,"nodeType":"100","endLine":112,"endColumn":90},{"ruleId":"89","severity":1,"message":"101","line":12,"column":7,"nodeType":"91","messageId":"92","endLine":12,"endColumn":11},{"ruleId":"95","severity":1,"message":"102","line":95,"column":21,"nodeType":"91","messageId":"97","endLine":95,"endColumn":36},{"ruleId":"95","severity":1,"message":"103","line":99,"column":21,"nodeType":"91","messageId":"97","endLine":99,"endColumn":39},{"ruleId":"85","replacedBy":"104"},{"ruleId":"87","replacedBy":"105"},{"ruleId":"89","severity":1,"message":"106","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":12},{"ruleId":"89","severity":1,"message":"90","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":112,"column":75,"nodeType":"100","endLine":112,"endColumn":90},{"ruleId":"89","severity":1,"message":"93","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"94","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":87,"column":17,"nodeType":"91","messageId":"97","endLine":87,"endColumn":23},{"ruleId":"89","severity":1,"message":"101","line":12,"column":7,"nodeType":"91","messageId":"92","endLine":12,"endColumn":11},{"ruleId":"95","severity":1,"message":"102","line":95,"column":21,"nodeType":"91","messageId":"97","endLine":95,"endColumn":36},{"ruleId":"95","severity":1,"message":"103","line":99,"column":21,"nodeType":"91","messageId":"97","endLine":99,"endColumn":39},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'AccordionActions' is defined but never used.","no-redeclare","'assets' is already defined.","redeclared","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'data' is assigned a value but never used.","'robinShowEquity' is already defined.","'coinbaseShowEquity' is already defined.",["107"],["108"],"'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]